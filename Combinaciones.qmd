---
title: "Combinaciones"
format: html
editor: visual
---

```{r}
library(readxl) #leer excel
library(writexl) #escribir en excel
library(openxlsx) #va mejor si hay muchas hojas
options(digits = 18)


datosCombinaciones24 <- read_excel("Excel Completo Combinaciones 2024.xlsx", sheet = 4)

View(datosCombinaciones24)
#names(datosCombinaciones24)
```

```{r}
library(dplyr)
# eficiencia energetica
WUEi <- datosCombinaciones24 %>%
  transmute(
    `WUEi WW1` = `AN WW1` / `gs WW1`,
    `WUEi WW2` = `AN WW2` / `gs WW2`,
    `WUEi WS1` = `AN WS1` / `gs WS1`,
    `WUEi WS2` = `AN WS2` / `gs WS2`,
    `WUEi WS3` = `AN WS3` / `gs WS3`,
    `WUEi R1`  = `AN R1`  / `gs R1`,
    `WUEi R2`  = `AN R2`  / `gs R2`
  )
View(WUEi)
```

```{r}
datosLiCorLimpio24 <- read_excel("Excel Completo Combinaciones 2024.xlsx", sheet = 13)
View(datosLiCorLimpio24)

EUA <- datosLiCorLimpio24 %>%
  transmute(
    `EUA` = `Photo (An)` / `Cond (gs)`,
  )
# View(EUA)
```

```{r}
library(dplyr)

planta1 <- datosLiCorLimpio24 %>%
  filter(Planta == 1)

# View(planta1)
planta1WW1 <- filter(planta1, Momento == "WW1")
# View(planta1WW1)
promedioP1WW1AN <- mean(planta1WW1$`Photo (An)`)
print(promedioP1WW1AN)
promedioP1WW1Gs <- mean(planta1WW1$`Cond (gs)`)
print(promedioP1WW1Gs)

promedioP1WW1_An_gs = promedioP1WW1AN/promedioP1WW1Gs
print(promedioP1WW1_An_gs)
```

```{r}
#promedios por grupo de momentos
promedios24 <- datosCombinaciones24 %>%
  mutate(
    # Promedio entre WW1 y WW2 para cada variable
    Ypd_WW_prom_24 = rowMeans(select(., `WW1-Ypd`, `WW2-Ypd`), na.rm = TRUE),
    Ymd_WW_prom_24 = rowMeans(select(., `WW1 Ymd`, `WW2 Ymd`), na.rm = TRUE),
    AN_WW_prom_24  = rowMeans(select(., `AN WW1`, `AN WW2`), na.rm = TRUE),
    gs_WW_prom_24  = rowMeans(select(., `gs WW1`, `gs WW2`), na.rm = TRUE),
    WUEi_WW_prom_24 = rowMeans(select(., `WUEi WW1`, `WUEi WW2`), na.rm = TRUE),
    #Kroot_WW_prom_24 = rowMeans(select(., `Kroot-shoot WW1`, `Kroot-shoot WW2`), na.rm = TRUE),
    
    AN_WW1_24 = `AN WW1`,
    gs_WW1_24 = `gs WW1`,
    WUEi_WW1_24 = `WUEi WW1`,

    # Promedio entre WS1 y WS2
    Ypd_WS_prom_24 = rowMeans(select(., `WS1-Ypd`, `WS2-Ypd`), na.rm = TRUE),
    Ymd_WS_prom_24 = rowMeans(select(., `WS1 Ymd`, `WS2 Ymd`), na.rm = TRUE),
    AN_WS_prom_24  = rowMeans(select(., `AN WS1`, `AN WS2`), na.rm = TRUE),
    gs_WS_prom_24  = rowMeans(select(., `gs WS1`, `gs WS2`), na.rm = TRUE),
    WUEi_WS_prom_24 = rowMeans(select(., `WUEi WS1`, `WUEi WS2`), na.rm = TRUE),
    #Kroot_WS_prom_24 = rowMeans(select(., `Kroot-shoot WS1`, `Kroot-shoot WS2`), na.rm = TRUE),

    # WS3 solo
    Ypd_WS3_24 = `WS3-Ypd`,
    Ymd_WS3_24 = `WS3 Ymd`,
    AN_WS3_24 = `AN WS3`,
    gs_WS3_24 = `gs WS3`,
    WUEi_WS3_24 = `WUEi WS3`,
    #Kroot_WS3_24 = `Kroot-shoot WS3`,

    # Promedio entre R1 y R2
    Ypd_R_prom_24 = rowMeans(select(., `R1-Ypd`, `R2-Ypd`), na.rm = TRUE),
    Ymd_R_prom_24 = rowMeans(select(., `R1 Ymd`, `R2 Ymd`), na.rm = TRUE),
    AN_R_prom_24  = rowMeans(select(., `AN R1`, `AN R2`), na.rm = TRUE),
    gs_R_prom_24  = rowMeans(select(., `gs R1`, `gs R2`), na.rm = TRUE),
    WUEi_R_prom_24 = rowMeans(select(., `WUEi R1`, `WUEi R2`), na.rm = TRUE),
    AN_R1_24 = `AN R1`,
    AN_R2_24 = `AN R2`,
    gs_R1_24 = `gs R1`,
    gs_R2_24 = `gs R2`,
    WUEi_R1_24 = `WUEi R1`,
    WUEi_R2_24 = `WUEi R2`
    #Kroot_R_prom_24 = rowMeans(select(., `Kroot-shoot R1`, `Kroot-shootR2`), na.rm = TRUE)
  ) %>%
  select(Combinación, ends_with("prom_24"),ends_with("WW1_24"),ends_with("R1_24"),ends_with("R2_24"), ends_with("WS3_24")) #repetidos


View(promedios24)

```

```{r}
datosCombinaciones23 <- read_excel("VidComb 2023 Limpio.xlsx", sheet = 4)
View(datosCombinaciones23)


promedios23 <- datosCombinaciones23 %>%
  mutate(
    # WW1
    Ypd_WW1_23 = `Ypd WW1`,
    Ymd_WW1_23 = `Ymd WW1`,
    AN_WW1_23 = `AN WW1`,
    gs_WW1_23 = `gs WW1`,
    WUEi_WW1_23 = `WUEi WW1`,
    #Kroot_WW1_23 = `Kroot-stem WW1`,

    #WS2
    Ypd_WS2_23 = `Ypd WS2`,
    Ymd_WS2_23 = `Ymd WS2`,
    AN_WS2_23 = `AN WS2`,
    gs_WS2_23 = `gs WS2`,
    WUEi_WS2_23 = `WUEi WS2`,
    #Kroot_WS2_23 = `Kroot-stem WS2`,

    # WS3 solo
    Ypd_WS3_23 = `Ypd WS3`,
    Ymd_WS3_23 = `Ymd WS3`,
    AN_WS3_23 = `AN WS3`,
    gs_WS3_23 = `gs WS3`,
    WUEi_WS3_23 = `WUEi WS3`,
    #Kroot_WS3_23 = `Kroot-stem WS3`,

    # Promedio entre R1 y R2
    Ypd_R_prom_23 = rowMeans(select(., `Ypd R1`, `Ypd R2`), na.rm = TRUE),
    Ymd_R_prom_23 = rowMeans(select(., `Ymd R1`, `Ymd R2`), na.rm = TRUE),
    AN_R_prom_23  = rowMeans(select(., `AN R1`, `AN R2`), na.rm = TRUE),
    gs_R_prom_23  = rowMeans(select(., `gs R1`, `gs R2`), na.rm = TRUE),
    WUEi_R_prom_23 = rowMeans(select(., `WUEi R1`, `WUEi R2`), na.rm = TRUE),
    AN_R1_23 = `AN R1`,
    AN_R2_23 = `AN R2`,
    gs_R1_23 = `gs R1`,
    gs_R2_23 = `gs R2`,
    WUEi_R1_23 = `WUEi R1`,
    WUEi_R2_23 = `WUEi R2`
    #Kroot_R_prom_23 = rowMeans(select(., `Kroot-stem R1`, `Kroot-stem R2`), na.rm = TRUE)
  ) %>%
  select(Combinación, ends_with("prom_23"), ends_with("WW1_23"),ends_with("WS2_23"),ends_with("R1_23"),ends_with("R2_23"), ends_with("WS3_23"))


View(promedios23)
```

```{r}
summary(comparacion_WW1)

comparacion_WW1 <- comparacion_WW1 %>% 
  filter(!is.na(AN_WW1_23), !is.na(AN_WW1_24))
```

```{r}
# Normalizar combinaciones
promedios23 <- promedios23 %>%
  mutate(Combinación = trimws(tolower(gsub("\\s+", "", Combinación))))

promedios24 <- promedios24 %>%
  mutate(Combinación = trimws(tolower(gsub("\\s+", "", Combinación))))

```

```{r}
# Unir solo AN
comparacion_AN_prom <- promedios23 %>%
  select(Combinación, AN_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, AN_WW_prom_24), by = "Combinación")

# Convertir a formato largo
comparacion_AN_prom_long <- comparacion_AN_prom %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "AN"
  )

# Graficar
ggplot(comparacion_AN_prom_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación AN WW1 2023 vs Promedio WW 2024", x = "Combinación", y = "AN")

```

```{r}
# Unir solo AN WW1
comparacion_AN_WW1 <- promedios23 %>%
  select(Combinación, AN_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, AN_WW1_24), by = "Combinación")

# Convertir a formato largo
comparacion_AN_WW1_long <- comparacion_AN_WW1 %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "AN"
  )

# Graficar
ggplot(comparacion_AN_WW1_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación AN WW1 2023 vs AN WW1 2024", x = "Combinación", y = "AN")

```

```{r}
comparacion_gs_prom <- promedios23 %>%
  select(Combinación, gs_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, gs_WW_prom_24), by = "Combinación")

comparacion_gs_prom_long <- comparacion_gs_prom %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "gs"
  )

ggplot(comparacion_gs_prom_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación gs WW1 2023 vs Promedio WW 2024", x = "Combinación", y = "gs")

```

```{r}
comparacion_gs_WW1 <- promedios23 %>%
  select(Combinación, gs_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, gs_WW1_24), by = "Combinación")

comparacion_gs_WW1_long <- comparacion_gs_WW1 %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "gs"
  )

ggplot(comparacion_gs_WW1_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación gs WW1 2023 vs gs WW1 2024", x = "Combinación", y = "gs")

```

```{r}
comparacion_WUEi_prom <- promedios23 %>%
  select(Combinación, WUEi_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, WUEi_WW_prom_24), by = "Combinación")

comparacion_WUEi_prom_long <- comparacion_WUEi_prom %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "WUEi"
  )

ggplot(comparacion_WUEi_prom_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación WUEi WW1 2023 vs Promedio WW 2024", x = "Combinación", y = "WUEi")

```

```{r}
comparacion_WUEi_WW1 <- promedios23 %>%
  select(Combinación, WUEi_WW1_23) %>%
  full_join(promedios24 %>% select(Combinación, WUEi_WW1_24), by = "Combinación")

comparacion_WUEi_WW1_long <- comparacion_WUEi_WW1 %>%
  pivot_longer(cols = -Combinación, names_to = "Variable", values_to = "Valor") %>%
  mutate(
    Año = ifelse(grepl("_23$", Variable), "2023", "2024"),
    Variable = "WUEi"
  )

ggplot(comparacion_WUEi_WW1_long, aes(x = Combinación, y = Valor, fill = Año)) +
  geom_bar(stat = "identity", position = "dodge", na.rm = TRUE) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Comparación WUEi WW1 2023 vs WUEi WW1 2024", x = "Combinación", y = "WUEi")

```

```{r}
# EFECTO AÑO
t.test(promedios23$AN_WW1_23, promedios24$AN_WW1_24, paired = TRUE)
```

```{r}
# Unir los datos en un solo dataframe
datos_combinados <- promedios23 %>%
  select(Combinación, AN = AN_WW1_23) %>%
  mutate(Año = "2023") %>%
  bind_rows(
    promedios24 %>%
      select(Combinación, AN = AN_WW1_24) %>%
      mutate(Año = "2024")
  )

# Modelo lineal
modelo <- lm(AN ~ Año, data = datos_combinados)
summary(modelo)
```

Perfecto, los p-valores nos dicen que no tenemos suficiente evidencia para rechazar la hipotesis nula, entonces no hay, en principio, ese efecto año en AN.

```{r}
# gs WW1 2023 y 2024
datos_gs <- promedios23 %>%
  select(Combinación, gs_WW1_23) %>%
  mutate(Año = "2023") %>%
  bind_rows(
    promedios24 %>%
      select(Combinación, gs_WW1_24) %>%
      rename(gs_WW1_23 = gs_WW1_24) %>%
      mutate(Año = "2024")
  )
modelo_gs <- lm(gs_WW1_23 ~ Año, data = datos_gs)
summary(modelo_gs)

ggplot(datos_gs, aes(x = Año, y = gs_WW1_23)) +
  geom_boxplot(fill = "lightblue") +
  theme_minimal() +
  labs(title = "Distribución de gs por año", y = "gs WW1")

```

La gs fue significativamente menor en 2024 que en 2023. Estadísticamente muy significativa. Si hay efecto año en gs

```{r}
# WUEi WW1 2023 y 2024
datos_WUEi <- promedios23 %>%
  select(Combinación, WUEi_WW1_23) %>%
  mutate(Año = "2023") %>%
  bind_rows(
    promedios24 %>%
      select(Combinación, WUEi_WW1_24) %>%
      rename(WUEi_WW1_23 = WUEi_WW1_24) %>%
      mutate(Año = "2024")
  )
modelo_WUEi <- lm(WUEi_WW1_23 ~ Año, data = datos_WUEi)
summary(modelo_WUEi)
ggplot(datos_WUEi, aes(x = Año, y = WUEi_WW1_23)) +
  geom_boxplot(fill = "lightgreen") +
  theme_minimal() +
  labs(title = "Distribución de WUEi por año", y = "WUEi WW1")

```

Si hay efecto año segun WUEi.

```{r}
library(dplyr)
library(tidyr)
library(ggplot2)

# Paso 1: unir los datos comparables
datos_comparables <- promedios23 %>%
  select(Combinación,
         AN_WW1_23, gs_WW1_23, WUEi_WW1_23,
         AN_WS2_23, gs_WS2_23, WUEi_WS2_23,
         AN_WS3_23, gs_WS3_23, WUEi_WS3_23,
         AN_R1_23, gs_R1_23, WUEi_R1_23,
         AN_R2_23, gs_R2_23, WUEi_R2_23) %>%
  full_join(promedios24 %>%
              select(Combinación,
                     AN_WW_prom_24, gs_WW_prom_24, WUEi_WW_prom_24,
                     AN_WS_prom_24, gs_WS_prom_24, WUEi_WS_prom_24,
                     AN_R_prom_24, gs_R_prom_24, WUEi_R_prom_24),
            by = "Combinación") %>%
  mutate(
    # Riego: WW1_23 vs WW_24
    AN_riego = rowMeans(select(., AN_WW1_23, AN_WW_prom_24), na.rm = TRUE),
    gs_riego = rowMeans(select(., gs_WW1_23, gs_WW_prom_24), na.rm = TRUE),
    WUEi_riego = rowMeans(select(., WUEi_WW1_23, WUEi_WW_prom_24), na.rm = TRUE),

    # Estrés: WS2_23 + WS3_23 + WS_24
    AN_estres = rowMeans(select(., AN_WS2_23, AN_WS3_23, AN_WS_prom_24), na.rm = TRUE),
    gs_estres = rowMeans(select(., gs_WS2_23, gs_WS3_23, gs_WS_prom_24), na.rm = TRUE),
    WUEi_estres = rowMeans(select(., WUEi_WS2_23, WUEi_WS3_23, WUEi_WS_prom_24), na.rm = TRUE),

    # Recuperación: R1_23 + R2_23 + R_24
    AN_rec = rowMeans(select(., AN_R1_23, AN_R2_23, AN_R_prom_24), na.rm = TRUE),
    gs_rec = rowMeans(select(., gs_R1_23, gs_R2_23, gs_R_prom_24), na.rm = TRUE),
    WUEi_rec = rowMeans(select(., WUEi_R1_23, WUEi_R2_23, WUEi_R_prom_24), na.rm = TRUE)
  )



# Normalizar y calcular índice por momento
datos_indices <- datos_comparables %>%
  select(Combinación,
         AN_riego, gs_riego, WUEi_riego,
         AN_estres, gs_estres, WUEi_estres,
         AN_rec, gs_rec, WUEi_rec) %>%
  mutate(
    AN_riego_norm = scale(AN_riego)[,1],
    gs_riego_norm = scale(gs_riego)[,1],
    WUEi_riego_norm = scale(WUEi_riego)[,1],
    Índice_riego = AN_riego_norm + WUEi_riego_norm - gs_riego_norm,

    AN_estres_norm = scale(AN_estres)[,1],
    gs_estres_norm = scale(gs_estres)[,1],
    WUEi_estres_norm = scale(WUEi_estres)[,1],
    Índice_estres = AN_estres_norm + WUEi_estres_norm - gs_estres_norm,

    AN_rec_norm = scale(AN_rec)[,1],
    gs_rec_norm = scale(gs_rec)[,1],
    WUEi_rec_norm = scale(WUEi_rec)[,1],
    Índice_rec = AN_rec_norm + WUEi_rec_norm - gs_rec_norm
  )




# Formato largo para graficar
datos_indices_long <- datos_indices %>%
  select(Combinación, Índice_riego, Índice_estres, Índice_rec) %>%
  pivot_longer(cols = -Combinación, names_to = "Momento", values_to = "Índice") %>%
  mutate(Momento = recode(Momento,
                          "Índice_riego" = "Riego",
                          "Índice_estres" = "Estrés",
                          "Índice_rec" = "Recuperación"))

# Gráfico
ggplot(datos_indices_long, aes(x = Combinación, y = Índice, fill = Momento)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Índice fisiológico por combinación genética y momento",
       x = "Combinación genética",
       y = "Índice de eficiencia (AN + WUEi – gs)",
       fill = "Momento fisiológico")



```
